(* FHDL Syntax Candidate 1 *)

program = { stmt, "\n" };

stmt = row-label | var-decl;
row-label = identifier, ":";
var-decl = var-class, identifier, "=", expr;
var-class = "mem" | "var";

expr = binary-op-expr | fn-call | braced-expr | literal;
binary-op-expr = expr, binary-op, expr;
binary-op = "+" | "-" | "*" | "/" | "%" | "**" | "&" | "|" | "^" | ">>" | "<<" | "==" | "!=" | "<" | ">" | "<=" | ">="
fn-call = identifier, "(", [ expr ], { ",", expr }, ")";
braced-expr = "(", expr, ")";
literal = ? any integer ?;

identifier = ? starts with letter, contains letters, numbers, underscores ?;